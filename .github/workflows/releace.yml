name: Python Syntax Check

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
    # リポジトリをチェックアウト
    - name: Check out code
      uses: actions/checkout@v3

    # Pythonをセットアップ
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'  # 必要なPythonバージョンを指定

    # 必要なパッケージをインストール
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 mypy pyflakes
        pip install types-setuptools types-pytz

    # flake8で文法チェック
    - name: Run flake8
      run: flake8 .

    # mypyで型チェック
    - name: Run mypy
      run: |
        mypy .


  update-version:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      # 1. リポジトリをクローン
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Pythonをセットアップ
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # 3. 必要なライブラリをインストール
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip

      # 4. スクリプトを実行してバージョンを更新
      - name: Update Version
        run: python update_version.py

      # 5. 更新内容をコミットしてプッシュ
      - name: Commit and Push Changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add vingat/_version.py
          git commit -m "Auto-increment version"
          git push

      - name: Read version from file
        id: read_version
        run: |
          version=$(python -c "exec(open('vingat/_version.py').read()); print(__version__)")
          echo "::set-output name=VERSION::$version"

      - name: Create GitHub tag
        env:
          VERSION: ${{ steps.read_version.outputs.VERSION }}
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git tag -a "v$VERSION" -m "Release version $VERSION"
          git push origin "v$VERSION"

  tag-version:
    needs: update-version
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Pull latest changes
        run: git pull

      - name: Read version from file
        id: read_version
        run: |
          version=$(python -c "exec(open('vingat/_version.py').read()); print(__version__)")
          echo "::set-output name=VERSION::$version"

      - name: Create GitHub tag
        env:
          VERSION: ${{ steps.read_version.outputs.VERSION }}
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git tag -a "v$VERSION" -m "Release version $VERSION"
          git push origin "v$VERSION"
